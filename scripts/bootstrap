#!/usr/bin/env bash
#
# `bootstrap` installs things.

set -e

source "$(dirname "$0")"/util.sh
source "$(dirname "$0")"/logic/symlink-topic.sh

cd "$(dirname "$0")"/..
DOTFILES_ROOT=$(pwd -P)

configure_git() {
  if ! [ -f git/gitconfig.local.symlink ]; then
    info 'Setting up git config…'

    local git_credential='cache'
    if [ "$(uname -s)" == 'Darwin' ]; then
      git_credential='osxkeychain'
    fi

    question 'What is your git author name?'
    edo read -e git_authorname
    question 'What is your git author email?'
    edo read -e git_authoremail

    edo 'sed
      -e "s/AUTHORNAME/$git_authorname/g"
      -e "s/AUTHOREMAIL/$git_authoremail/g"
      -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g"
      git/gitconfig.local.symlink.example > git/gitconfig.local.symlink'

    success 'Successfully configured git.\n'
  fi
}

install_dotfiles() {
  info 'Installing dotfiles…'

  # NOTE: We use a mapfile here because we need to read user input in the loop and
  #   if we used `find … | while read …` we'd receive the result of `find` as "user input".
  #   Also we can't use `find -exec` because `symlink_topic` is not in the `PATH`.
  mapfile -d '' topics < <(find -H * -maxdepth 0 -type d -print0)
  for topic in "${topics[@]}"; do
    symlink_topic "$topic"
  done

  success 'Successfully installed dotfiles.\n'
}

install_dependencies() {
	# If we're on a Mac, let's install and setup homebrew.
	if [ "$(uname -s)" == 'Darwin' ]; then
	  info 'Installing dependencies…'
	  if edo _log_as_info source bin/dot; then
	    success 'Successfully installed dependencies.\n'
	  else
	    die 'Error installing dependencies.'
	  fi
	fi
}

configure_git
install_dotfiles
install_dependencies

success 'All installed!'
